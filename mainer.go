package main

import (
	"context"
	"fmt"
	"log"
	"net/http"
	"net/url"
	"time"

	"github.com/minio/minio-go/v7"
	"github.com/minio/minio-go/v7/pkg/credentials"
)

const (
	bucketName  = "music"
	objectName  = "Fast Lane Drift.mp3"
	minDuration = 10 * time.Second
)

func main() {
	minioClient, err := minio.New("localhost:9000", &minio.Options{
		Creds:  credentials.NewStaticV4("admin", "secret123", ""),
		Secure: false,
	})
	if err != nil {
		log.Fatalln("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MinIO:", err)
	}

	log.Println("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MinIO —É—Å–ø–µ—à–Ω–æ")

	http.HandleFunc("/", func(w http.ResponseWriter, r *http.Request) {
		expiry := 20 * time.Second

		log.Println("üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—ä–µ–∫—Ç–∞:", objectName)
		info, err := minioClient.StatObject(context.Background(), bucketName, objectName, minio.StatObjectOptions{})
		if err != nil {
			log.Printf("‚ùå –û–±—ä–µ–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –æ—à–∏–±–∫–∞ –ø—Ä–∏ StatObject: %v", err)
			http.Error(w, "–û—à–∏–±–∫–∞: –æ–±—ä–µ–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –ø–æ–≤—Ä–µ–∂–¥—ë–Ω", 404)
			return
		}
		log.Printf("‚ÑπÔ∏è –û–±—ä–µ–∫—Ç –Ω–∞–π–¥–µ–Ω: —Ä–∞–∑–º–µ—Ä = %d –±–∞–π—Ç, –¥–∞—Ç–∞ = %v", info.Size, info.LastModified)

		presignedURL, err := getPresignedURL(minioClient, bucketName, objectName, expiry)
		if err != nil {
			log.Printf("‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ pre-signed —Å—Å—ã–ª–∫–∏: %v", err)
			http.Error(w, "–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Å—ã–ª–∫–∏: "+err.Error(), 500)
			return
		}

		log.Printf("üîó –°—Å—ã–ª–∫–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞ (—ç–∫—Å–ø–∏—Ä–∞—Ü–∏—è %v —Å–µ–∫—É–Ω–¥): %s", expiry.Seconds(), presignedURL)
		w.Header().Set("Content-Type", "text/html")
		fmt.Fprintf(w, `
			<!DOCTYPE html>
			<html lang="ru">
			<head><meta charset="UTF-8"><title>–ü—Ä–æ—Å–ª—É—à–∞—Ç—å —Ç—Ä–µ–∫</title></head>
			<body>
				<h1>–í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ: %s</h1>
				<audio controls autoplay>
					<source src="%s" type="audio/mpeg">
					–í–∞—à –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∞—É–¥–∏–æ.
				</audio>
			</body>
			</html>
		`, objectName, presignedURL)
	})

	log.Println("üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ :8080")
	http.ListenAndServe(":8080", nil)
}

func getPresignedURL(client *minio.Client, bucket, object string, expiry time.Duration) (string, error) {
	ctx := context.Background()
	reqParams := make(url.Values)

	if expiry < minDuration {
		expiry = minDuration
	}

	presignedURL, err := client.PresignedGetObject(ctx, bucket, object, expiry, reqParams)
	if err != nil {
		return "", err
	}
	return presignedURL.String(), nil
}
